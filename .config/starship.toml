format = """
$username\
$hostname\
$directory\
${custom.jj}\
${custom.git_state}\
${custom.git_status}\
$line_break\
$character"""

[directory]
style = "blue"

[character]
success_symbol = "[❯](purple)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](green)"

[cmd_duration]
format = "[$duration]($style) "
style = "yellow"

# [python]
# format = "[$virtualenv]($style) "
# style = "bright-black"

# custom module for jj status
[custom.jj]
description = "The current jj status"
when = "jj --ignore-working-copy root"
symbol = " "
command = '''
# Get change info (id, bookmarks)
info=$(jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, ">"),
      if(divergent, "\\"),
    ),
  )
')

desc=$(echo "$info" | sed 's/.*| //' | sed 's/\x1b\[[0-9;]*m//g')

# Get file change count if there are actual changes
file_count=$(jj diff --stat --ignore-working-copy | tail -n1 | grep -oE '[1-9][0-9]*' | head -n1 || echo "")

# Build output: id branch | file_count description
# Single optimized query for ID, bookmarks, and description
combined=$(jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template 'change_id.shortest(4) ++ if(bookmarks, " " ++ bookmarks) ++ "|||" ++ if(description, description.first_line(), "")')
colorful_id_branch=$(echo "$combined" | sed 's/|||.*//')
desc=$(echo "$combined" | sed 's/.*|||//' | sed 's/\x1b\[[0-9;]*m//g')
if [ -n "$colorful_id_branch" ]; then
    output="$colorful_id_branch"
fi

# Add file count and description after |
details=""
if [ -n "$file_count" ]; then
    details="\x1b[2m~$file_count\x1b[0m"
fi
if [ -n "$desc" ] && [ "$desc" != "(no description set)" ]; then
    if [ -n "$details" ]; then
        details="$details \x1b[2m$desc\x1b[0m"
    else
        details="\x1b[2m$desc\x1b[0m"
    fi
fi

if [ -n "$details" ]; then
    if [ -n "$output" ]; then
        output="$output $details"
    else
        output="$details"
    fi
fi

echo " $output"
'''

[git_branch]
format = "[$branch]($style)"
style = "bright-black"

[git_state]
disabled = true
format = '([$state( $progress_current/$progress_total)]($style) )'
style = "bright-black"

[git_status]
disabled = true
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)"
style = "cyan"
conflicted = "​"
untracked = "​"
modified = "​"
staged = "​"
renamed = "​"
deleted = "​"
stashed = "≡"

# For now, let's just show the branch
# [custom.git_branch]
# when = "! jj --ignore-working-copy root"
# command = "starship module git_branch"
# description = "Only show git_branch if we're not in a jj repo"

[custom.git_state]
when = "! jj --ignore-working-copy root"
command = "starship module git_state"
description = "Only show git_state if we're not in a jj repo"

[custom.git_status]
when = "! jj --ignore-working-copy root"
command = "starship module git_status"
description = "Only show git_status if we're not in a jj repo"
