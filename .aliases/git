#!/bin/zsh
# vim: filetype=sh

primary_branch="master"

# Remove `+` and `-` from start of diff lines; just rely upon color.
alias gd='git diff --color | sed "s/^\([^-+ ]*\)[-+ ]/\\1/" | less -r'
alias glog="git log --all --graph --pretty=oneline --decorate --abbrev-commit"
alias gl='git log --oneline'
alias gs='git status'
alias ga='git add -A'
alias gcm='git commit -m'
alias gacm='git add -A && git commit -m'
alias gpush='git push'
alias gpull='git pull'
alias gcane='git commit --ammend --no-edit'
alias gpr='hub pull-request'
alias gm='git checkout $primary_branch && git pull'
alias gmain="git checkout main && git pull"
alias gmas="git checkout master && git pull"
alias grbc="git add . && git rebase --continue"

###
### JJ aliases
###
alias jjl="jj log --limit 10"
alias jl="jj log --limit 10"
alias js="jj status"
alias jjs="jj status"


# Start a new branch with last commit, then revert the commit in the previous branch
function branchify {
  git checkout -b $1 && git checkout - && git reset --hard HEAD~ && git checkout -
}


# Function to print out commands that I defined in here and forgot about
function ghelp {
  echo -e "\n
   gd - 'git diff --color | sed 's/^\([^-+ ]*\)[-+ ]/\\1/' | less -r'
   glog - 'git log --all --graph --pretty=oneline --decorate --abbrev-commit'
   gl - 'git log --oneline'
   gs - 'git status'
   ga - 'git add -A'
   gcm - 'git commit -m'
   gacm - 'git add -A && git commit -m'
   gpush - 'git push'
   gpull - 'git pull'
   gcane - 'git commit --ammend --no-edit'
   gpr - 'hub pull-request'
   gm - 'git checkout <primary_branch> && git pull'
   gmain - 'git checkout main && git pull'
   gmas - 'git checkout master && git pull'

	branchify - 'Start new branch with last commit and revert commit on previous branch'
	ghelp - 'Print out this'
  "
}

